import java.io.*;
import java.util.*;

class Main {

	public static void main (String [] abc) throws IOException {
	    
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		
		String s;
		while ((s=br.readLine())!=null) 
		{
			int t=Integer.parseInt(s);
			
			Stack<Integer> stack=new Stack<>(); 
			Queue<Integer> q=new LinkedList<>(); 
			PriorityQueue<Integer> pq=new PriorityQueue<>(Collections.reverseOrder());
		
			boolean isq=true,iss=true,ispq=true;
			
			for (int i=0;i<t;i++) 
			{
				StringTokenizer st=new StringTokenizer(br.readLine());
				String op=st.nextToken();
				
				int value=Integer.parseInt(st.nextToken());
				
				if (op.equals("1")) {
					if (iss) stack.push(value);
					if (isq) q.offer(value);
					if (ispq) pq.offer(value);
				} 
				
				else if (op.equals("2"))
				{
					if (iss && (stack.size()==0 || !stack.pop().equals(value))) 
					    iss=false;
					if (isq && (q.size()==0 || !q.poll().equals(value)))
					    isq=false;
					if (ispq && (pq.size()==0 || !pq.poll().equals(value)))
					    ispq=false;
				}
			}
			
			if (!iss && !isq && !ispq) 
			    System.out.println("impossible");
			else if ((iss && isq) || (iss && ispq) || (isq && ispq)) 
			        System.out.println("not sure");
			else if (iss) 
			        System.out.println("stack");
			else if
			        (isq) System.out.println("queue");
			else if
			        (ispq) System.out.println("priority queue");
		}
	}
}
