import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the substrCount function below.
    static long substrCount(int n, String s) {
    int count = n;
    int count1 = 1;
    int mI = -1;
    for (int i = 1; i < n; i++) {
        if (s.charAt(i) == s.charAt(i-1)) {
            count += count1;
            count1++;
            if (mI > 0) {
                if ((mI-count1) > 0 && s.charAt(mI-count1) == s.charAt(i)) {
                    count++;
                } else {
                    mI = -1; 
                }
            }
        }
        else {
            count1 = 1;
            if (((i-2) >= 0) && s.charAt(i-2) == s.charAt(i)) {
                count++;                     
                mI = i-1;
            } else {
                mI = -1;
            }
        }
    }
    return count;
     }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        long result = substrCount(n, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
    }

